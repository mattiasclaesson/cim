<script type="application/javascript">
{{.sections}}
$.fn.serializeControls = function () {
    var data = {};

    function buildInputObject(arr, val) {
        if (arr.length < 1)
            return val;
        var objkey = arr[0];
        if (objkey.slice(-1) == "]") {
            objkey = objkey.slice(0, -1);
        }
        var result = [];
        if (arr.length == 1) {
            result[objkey] = val;
        } else {
            arr.shift();
            var nestedVal = buildInputObject(arr, val);
            result[objkey] = nestedVal;
        }
        return result;
    }

    $.each(this.serializeArray(), function (index) {
        var val = this.value;
        var c = this.name.split("[");
        var a = buildInputObject(c, val);
        $.extend(true, data, a);
    });

    return data;
}

$("#options").on("submit", function (e) {
    e.preventDefault();
    var $form = $(e.target);
    let payload = JSON.stringify($form.serializeControls(), null, 2)
    console.log(payload);
    $.ajax("update", {
        data: payload,
        contentType: 'application/json',
        type: 'POST',
        success: function (data) {
            $('#dump_contents').html(data.hexview);
            $('#md5').html(data.md5);
            $('#crc32').html(data.crc32);
            setTimeout(() => {
                processSections();
            }, 50);
            $('input[name="file_update"]').val(data.B64);
            $('input[name="file"]').val(data.B64);
        }
    });
});


$("input").blur(function () {
    if ($(this).attr("data-selected-all")) {
        //Remove atribute to allow select all again on focus        
        $(this).removeAttr("data-selected-all");
    }
});

$("input").click(function () {
    if (!$(this).attr("data-selected-all")) {
        try {
            $(this).selectionStart = 0;
            $(this).selectionEnd = $(this).value.length + 1;
            //add atribute allowing normal selecting post focus
            $(this).attr("data-selected-all", true);
        } catch (err) {
            $(this).select();
            //add atribute allowing normal selecting post focus
            $(this).attr("data-selected-all", true);
        }
    }
});



function processSections() {
    for (let i = 0; i < sections.length; i++) {
        let section = sections[i];
        section.title = section.id;
        if (section.type) {
            section.title += ` (${section.type})`;
        }
        if (section.confirmed) {
            section.title += ' [Confirmed]';
        }
        for (let byte = 0; byte < section.length; byte++) {
            $bytes = $('.byte-' + (section.start + byte));
            //if (section.confirmed) {
            //    $bytes.addClass('confirmed');
            //}
            $bytes.addClass('section').addClass('section-' + section.id).data('section', section);
            if (section.checksum) {
                $bytes.addClass('checksum');
            }
            $bytes.attr('title', section.title);
            $bytes.map(function (byte) {
                let el = $bytes[byte],
                    $el = $(el),
                    title = $el.attr('title');
                title = '0x' + (1 * $el.data('i')).toString(16) + ': ' + title;
                $($bytes[byte]).attr('title', title);
                var tooltip = new bootstrap.Tooltip($bytes[byte]);
            });
        }
    }

    $('.hexByte, .asciiByte, .field').hover(function () {
        var i = $(this).data('i');
        var section = $(this).data('section');
        if (section) {
            $('.section-' + section.id).toggleClass('hoverSection', true);
        } else {
            $('.byte-' + i).toggleClass('hover', true);
        }
    }, function () {
        var i = $(this).data('i');
        var section = $(this).data('section');
        if (section) {
            $('.section-' + section.id).toggleClass('hoverSection', false);
        } else {
            $('.byte-' + i).toggleClass('hover', false);
        }
    });
};

$('document').ready(function() {
    processSections();
});
</script>