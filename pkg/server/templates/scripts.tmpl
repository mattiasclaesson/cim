<script type="application/javascript">

$.fn.serializeControls = function() {
  var data = {};

  function buildInputObject(arr, val) {
    if (arr.length < 1)
      return val;  
    var objkey = arr[0];
    if (objkey.slice(-1) == "]") {
      objkey = objkey.slice(0,-1);
    }  
    var result = [];
    if (arr.length == 1){
      result[objkey] = val;
    } else {
      arr.shift();
      var nestedVal = buildInputObject(arr,val);
      result[objkey] = nestedVal;
    }
    return result;
  }

  $.each(this.serializeArray(), function(index) {
    var val = this.value;
    var c = this.name.split("[");
    var a = buildInputObject(c, val);
    $.extend(true, data, a);
  });
  
  return data;
}

function getFormData($form){
    var unindexed_array = $form.serializeArray();
    var indexed_array = {};

    $.map(unindexed_array, function(n, i){
    console.log(n);
    console.log(i);
        indexed_array[n['name']] = n['value'];
    });

    return indexed_array;
}


$("#options").on("submit", function (e) {
  e.preventDefault();
  var $form = $(e.target);
  let dd = JSON.stringify($form.serializeControls(), null, 2)
  console.log(dd)
    $.ajax("/update", {
    data : dd,
    contentType : 'application/json',
    type : 'POST'
    });
});
    
    
    
    
    $('.hexByte, .asciiByte, .field').hover(function () {
        var i = $(this).data('i');
        var section = $(this).data('section');
        if (section) {
            $('.section-' + section.id).toggleClass('hoverSection', true);
        } else {
            $('.byte-' + i).toggleClass('hover', true);
        }
    }, function () {
        var i = $(this).data('i');
        var section = $(this).data('section');
        if (section) {
            $('.section-' + section.id).toggleClass('hoverSection', false);
        } else {
            $('.byte-' + i).toggleClass('hover', false);
        }
    });
    {{.sections}}
    for (let i = 0; i < sections.length; i++) {
        let section = sections[i];
        section.title = section.id;
        if (section.type) {
            section.title += ` (${section.type})`;
        }
        if (section.confirmed) {
            section.title += ' [Confirmed]';
        }
        for (let byte = 0; byte < section.length; byte++) {
            $bytes = $('.byte-' + (section.start + byte));
            //if (section.confirmed) {
            //    $bytes.addClass('confirmed');
            //}
            $bytes.addClass('section').addClass('section-' + section.id).data('section', section);
            if (section.checksum) {
                $bytes.addClass('checksum');
            }
            $bytes.attr('title', section.title);
            $bytes.map(function (byte) {
                let el = $bytes[byte],
                    $el = $(el),
                    title = $el.attr('title');
                title = '0x' + (1 * $el.data('i')).toString(16) + ': ' + title;
                $($bytes[byte]).attr('title', title);
                var tooltip = new bootstrap.Tooltip($bytes[byte]);
            });
        }
    }
</script>